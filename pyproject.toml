[project]
name = "bluemira"
authors = [{name="The bluemira team"}]
description = """An integrated inter-disciplinary design tool for future fusion
 reactors, incorporating several modules, some of which rely on
 other codes, to carry out a range of typical conceptual fusion
 reactor design activities."""
readme = "README.md"
requires-python = ">=3.8"
dynamic=['version']
classifiers=[
        "Development Status :: 5 - Production/Stable",
        "Programming Language :: Python :: 3",
        "License :: OSI Approved :: GNU Lesser General Public License v2.1 or later (LGPLv2.1+)",
        "Operating System :: POSIX :: Linux",
    ]
dependencies = [
    "anytree",
    "asteval",
    "Babel",
    "click",
    "contourpy",
    "CoolProp",
    "fortranformat",
    "gmsh",
    "imageio",
    "matplotlib>=3.5",
    "meshio",
    "neutronics-material-maker==0.1.11",  # Crash on upgrade
    "nlopt",
    "numba",
    "numba-scipy",
    "numpy",
    "pint",
    "periodictable",
    "pyclipper",
    "pypet",
    "pyquaternion",
    "scikit-learn",
    "seaborn",
    "tables",
    "tabulate",
    "typeguard",
    "scipy",
]

[project.entry-points.numba_extensions]
init = "numba_scipy:_init_extension"

[project.urls]
homepage = "https://github.com/Fusion-Power-Plant-Framework/bluemira"
documentation = "https://bluemira.readthedocs.io"
repository = "https://github.com/Fusion-Power-Plant-Framework/bluemira"

[project.optional-dependencies]
dev = [
    "black",
    "flake8",
    "flake8-absolute-import",
    "flake8-bandit",
    "flake8-docstrings",
    "jupytext",
    "mypy",
    "myst-nb",
    "pep8-naming",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "pytest-html",
    "pytest-metadata",
    "pytest-json-report",
    "sphinx",
    "sphinx-autoapi",
    "sphinx_copybutton",
    "sphinx-rtd-theme",
    "versioneer",
]
examples = ["notebook", "jupytext"]
pinned = [
    "nlopt==2.7.1",
    "numba==0.56.4",
    "numba-scipy==0.3.1",
    "numpy==1.23.2",
    "matplotlib==3.7.1",
    "scipy==1.7.3",
]
openmoc = [
    "OpenMOC @git+https://github.com/mit-crpg/OpenMOC.git@7940c0b",
]
openmc = [
    "OpenMC @git+https://github.com/openmc-dev/openmc.git",
    "parametric-plasma-source @git+https://github.com/open-radiation-sources/parametric-plasma-source.git",
]
process = [
    "cmake>=3.13.0",
]

[build-system]
requires = ["setuptools", "versioneer[toml]>=0.26"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["bluemira*"]
exclude = ["tests*"]

[tool.black]
line-length = 89
include = '\.pyi?$'
extend-exclude = '\.env'

[tool.coverage.report]
"exclude_lines" = [
  "if __name__ == .__main__.:"
]
"omit" = [
  "bluemira/_version.py"
]

[tool.isort]
line_length = 89
profile = "black"
skip_gitignore = true
known_first_party = ["bluemira", "eudemo"]
force_to_top = ["freecad"]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = false
disallow_incomplete_defs = true
disallow_untyped_decorators = true
ignore_missing_imports = true
no_implicit_reexport = true
strict_equality = true
strict_concatenate = true
warn_return_any = false
warn_no_return = false
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true

[[tool.mypy.overrides]]
module = "bluemira._version.*"
follow_imports = "skip"
ignore_errors = true

[tool.pytest.ini_options]
markers = [
    "longrun",
    "reactor",
    "private"
]
addopts = "--html=report.html --self-contained-html --strict-markers"
filterwarnings = ['ignore:Matplotlib is currently using agg:UserWarning']

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "bluemira/_version.py"
versionfile_build = "bluemira/_version.py"
tag_prefix = "v"
parentdir_prefix = "bluemira-"
